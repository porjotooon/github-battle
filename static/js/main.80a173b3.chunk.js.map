{"version":3,"sources":["utils/api.js","context/theme.js","components/Card.js","components/Loading.js","components/Hover.js","components/Tooltip.js","components/Popular.js","components/Results.js","components/Battle.js","components/Nav.js","App.js","index.js"],"names":["params","getErrorMsg","message","username","getRepos","fetch","then","res","json","repos","Error","calculateScore","followers","reduce","count","stargazers_count","getStarCount","getUserData","player","Promise","all","profile","score","React","createContext","Consumer","Provider","ThemeConsumer","ThemeProvider","Card","header","subheader","avatar","href","name","children","theme","className","src","alt","styles","content","fontSize","position","left","right","marginTop","textAlign","Loading","props","state","text","this","speed","interval","window","setInterval","setState","clearInterval","style","Component","defaultProps","Hover","hovering","mouseOver","bind","mouseOut","onMouseOver","onMouseOut","container","display","tooltip","boxSizing","width","bottom","marginLeft","borderRadius","backgroundColor","padding","marginBottom","color","Tooltip","LanguageNavBar","selected","onUpdateLanguage","map","lang","key","onClick","ReposGrid","repo","index","owner","html_url","forks","open_issues","login","avatar_url","size","toLocaleString","Popular","selectedLanguage","error","updateLanguage","isLoading","language","endpoint","encodeURI","data","items","fetchPopularRepos","catch","console","warn","ProfileList","location","company","following","Results","winner","loser","loading","players","playerOne","playerTwo","results","sort","a","b","sortPlayers","onReset","Instructions","PlayerInput","handleSubmit","handleChange","event","preventDefault","onSubmit","target","value","htmlFor","label","type","id","placeholder","autoComplete","onChange","disabled","PlayerPreview","Battle","battle","handleReset","Fragment","Nav","toggleTheme","activeStyle","to","exact","App","basename","process","path","component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.80a173b3.chunk.js","sourcesContent":["const id = \"1f41f8cac4df61a8ac5b\"\r\nconst sec = \"3661b3c1b7c0c5e0115370282e78f17162de3224\"\r\nconst params = `?client_id=${id}&client_secret=${sec}`\r\n\r\nfunction getErrorMsg (message, username) {\r\n    if (message === 'Not Found') {\r\n      return `${username} doesn't exist`\r\n    }\r\n  \r\n    return message\r\n  }\r\n  \r\n  function getProfile (username) {\r\n    return fetch(`https://api.github.com/users/${username}${params}`)\r\n      .then((res) => res.json())\r\n      .then((profile) => {\r\n        if (profile.message) {\r\n          throw new Error(getErrorMsg(profile.message, username))\r\n        }\r\n  \r\n        return profile\r\n      })\r\n  }\r\n  \r\n  function getRepos (username) {\r\n    return fetch(`https://api.github.com/users/${username}/repos${params}&per_page=100`)\r\n      .then((res) => res.json())\r\n      .then((repos) => {\r\n        if (repos.message) {\r\n          throw new Error(getErrorMsg(repos.message, username))\r\n        }\r\n  \r\n        return repos\r\n      })\r\n  }\r\n  \r\n  function getStarCount (repos) {\r\n    return repos.reduce((count, { stargazers_count }) => count + stargazers_count , 0)\r\n  }\r\n  \r\n  function calculateScore (followers, repos) {\r\n    return (followers * 3) + getStarCount(repos)\r\n  }\r\n  \r\n  function getUserData (player) {\r\n    return Promise.all([\r\n      getProfile(player),\r\n      getRepos(player)\r\n    ]).then(([ profile, repos ]) => ({\r\n      profile,\r\n      score: calculateScore(profile.followers, repos)\r\n    }))\r\n  }\r\n  \r\n  function sortPlayers (players) {\r\n    return players.sort((a, b) => b.score - a.score)\r\n  }\r\n  \r\n  export function battle (players) {\r\n    return Promise.all([\r\n      getUserData(players[0]),\r\n      getUserData(players[1])\r\n    ]).then((results) => sortPlayers(results))\r\n  }\r\n  \r\n  export function fetchPopularRepos (language) {\r\n    const endpoint = window.encodeURI(`https://api.github.com/search/repositories?q=stars:>1+language:${language}&sort=stars&order=desc&type=Repositories`)\r\n  \r\n    return fetch(endpoint)\r\n      .then((res) => res.json())\r\n      .then((data) => {\r\n        if (!data.items) {\r\n          throw new Error(data.message)\r\n        }\r\n  \r\n        return data.items\r\n      })\r\n  }","import React from 'react'\r\n\r\nconst { Consumer, Provider } = React.createContext()\r\n\r\nexport const ThemeConsumer = Consumer\r\nexport const ThemeProvider = Provider","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { ThemeConsumer } from '../context/theme'\r\n\r\nexport default function Card ({ header, subheader, avatar, href, name, children }) {\r\n  return (\r\n    <ThemeConsumer>\r\n      {({ theme }) => (\r\n        <div className={`card bg-${theme}`}>\r\n          <h4 className='header-lg center-text'>\r\n            {header}\r\n          </h4>\r\n          <img\r\n            className='avatar'\r\n            src={avatar}\r\n            alt={`Avatar for ${name}`}\r\n          />\r\n          {subheader && (\r\n            <h4 className='center-text'>\r\n              {subheader}\r\n            </h4>\r\n          )}\r\n          <h2 className='center-text'>\r\n            <a className='link' href={href}>\r\n              {name}\r\n            </a>\r\n          </h2>\r\n          {children}\r\n        </div>\r\n      )}\r\n    </ThemeConsumer>\r\n  )\r\n}\r\n\r\nCard.propTypes = {\r\n  header: PropTypes.string.isRequired,\r\n  subheader: PropTypes.string,\r\n  avatar: PropTypes.string.isRequired,\r\n  href: PropTypes.string.isRequired,\r\n  name: PropTypes.string.isRequired,\r\n}","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nconst styles = {\r\n  content: {\r\n    fontSize: '35px',\r\n    position: 'absolute',\r\n    left: '0',\r\n    right: '0',\r\n    marginTop: '20px',\r\n    textAlign: 'center',\r\n  }\r\n}\r\n\r\nexport default class Loading extends React.Component {\r\n  constructor(props) {\r\n    super(props)\r\n\r\n    this.state = {\r\n      content: props.text\r\n    }\r\n  }\r\n  componentDidMount () {\r\n    const { speed, text } = this.props\r\n\r\n    this.interval = window.setInterval(() => {\r\n      this.state.content === text + '...'\r\n        ? this.setState({ content: text })\r\n        : this.setState(({ content }) => ({ content: content + '.' }))\r\n    }, speed)\r\n  }\r\n  componentWillUnmount () {\r\n    window.clearInterval(this.interval)\r\n  }\r\n  render() {\r\n    return (\r\n      <p style={styles.content}>\r\n        {this.state.content}\r\n      </p>\r\n    )\r\n  }\r\n}\r\n\r\nLoading.propTypes = {\r\n  text: PropTypes.string.isRequired,\r\n  speed: PropTypes.number.isRequired,\r\n}\r\n\r\nLoading.defaultProps = {\r\n  text: 'Loading',\r\n  speed: 300\r\n}","import React from 'react'\r\n\r\nexport default class Hover extends React.Component {\r\n  constructor(props) {\r\n    super(props)\r\n\r\n    this.state = {\r\n      hovering: false,\r\n    }\r\n\r\n    this.mouseOver = this.mouseOver.bind(this)\r\n    this.mouseOut = this.mouseOut.bind(this)\r\n  }\r\n  mouseOver() {\r\n    this.setState({\r\n      hovering: true\r\n    })\r\n  }\r\n  mouseOut() {\r\n    this.setState({\r\n      hovering: false\r\n    })\r\n  }\r\n  render () {\r\n    return (\r\n      <div onMouseOver={this.mouseOver} onMouseOut={this.mouseOut}>\r\n        {this.props.children(this.state.hovering)}\r\n      </div>\r\n    )\r\n  }\r\n}","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport Hover from './Hover'\r\n\r\nconst styles = {\r\n  container: {\r\n    position: 'relative',\r\n    display: 'flex'\r\n  },\r\n  tooltip: {\r\n    boxSizing: 'border-box',\r\n    position: 'absolute',\r\n    width: '160px',\r\n    bottom: '100%',\r\n    left: '50%',\r\n    marginLeft: '-80px',\r\n    borderRadius: '3px',\r\n    backgroundColor: 'hsla(0, 0%, 20%, 0.9)',\r\n    padding: '7px',\r\n    marginBottom: '5px',\r\n    color: '#fff',\r\n    textAlign: 'center',\r\n    fontSize: '14px',\r\n  }\r\n}\r\n\r\nexport default function Tooltip ({ text, children }) {\r\n  return (\r\n    <Hover>\r\n      {(hovering) => (\r\n        <div style={styles.container}>\r\n          {hovering === true && <div style={styles.tooltip}>{text}</div>}\r\n          {children}\r\n        </div>\r\n      )}\r\n    </Hover>\r\n  )\r\n}\r\n\r\nTooltip.propTypes = {\r\n  text: PropTypes.string.isRequired,\r\n}","import React, { Component } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { fetchPopularRepos } from '../utils/api'\r\nimport { FaUser, FaStar, FaCodeBranch, FaExclamationTriangle } from 'react-icons/fa'\r\nimport Card from './Card'\r\nimport Loading from './Loading'\r\nimport Tooltip from './Tooltip'\r\n\r\n\r\nconst LanguageNavBar = ({ selected, onUpdateLanguage }) => {\r\n    const languages = [\"All\",\"JavaScript\",\"Ruby\",\"Java\",\"CSS\",\"Python\"]\r\n    return (\r\n        <ul className=\"flex-center\">\r\n            {languages.map(lang => (\r\n                <li key={lang}>\r\n                    <button className=\"btn-clear nav-link\"\r\n                    style={lang === selected ? {color: 'rgb(187, 46, 31)'} : null}\r\n                    onClick={() => onUpdateLanguage(lang)}\r\n                    >\r\n                        {lang}\r\n                    </button>\r\n                </li>\r\n            ))}\r\n        </ul>\r\n    )\r\n}\r\n\r\n\r\nLanguageNavBar.propTypes = {\r\n    selected: PropTypes.string.isRequired,\r\n    onUpdateLanguage: PropTypes.func.isRequired\r\n}\r\n\r\n\r\n\r\nconst ReposGrid = ({ repos }) => {\r\n    return(\r\n        <ul className='grid space-around'>\r\n            {repos.map((repo, index) => {\r\n                const { name, owner, html_url, stargazers_count, forks, open_issues } = repo\r\n                const { login, avatar_url } = owner\r\n\r\n                return (\r\n                    <li key={html_url}>\r\n                        <Card \r\n                            header={`#${index+1}`}\r\n                            name={login}\r\n                            href={html_url}\r\n                            avatar={avatar_url}\r\n                            >\r\n                        <ul className='card-list'>\r\n                            <li>\r\n                                <Tooltip text=\"Github username\">\r\n                                <FaUser color='rgb(255,191,116)' size={22}/>\r\n                                <a href={`https://github.com/${login}`}>\r\n                                    {login}\r\n                                </a>\r\n                                </Tooltip>\r\n                            </li>\r\n                            <li>\r\n                                <FaStar color='gold' size={22}/>\r\n                                {stargazers_count.toLocaleString()} stars\r\n                            </li>\r\n                            <li>\r\n                                <FaCodeBranch color='rgb(129,195,245)' size={22}/>\r\n                                {forks.toLocaleString()} forks\r\n                            </li>\r\n                            <li>\r\n                                <FaExclamationTriangle color='rgb(241,138,147)' size={22}/>\r\n                                {open_issues.toLocaleString()} open issues\r\n                            </li>\r\n                        </ul>\r\n                        </Card>\r\n                        \r\n                    </li>\r\n                )\r\n            })}\r\n        </ul>\r\n    )\r\n}\r\n\r\nReposGrid.propTypes = {\r\n    repos: PropTypes.array.isRequired\r\n}\r\n\r\nclass Popular extends Component {\r\n    constructor(props){\r\n        super(props)\r\n\r\n        //state for language\r\n        this.state = {\r\n            selectedLanguage: 'All',\r\n            repos: null,\r\n            error: null\r\n        }\r\n        this.updateLanguage = this.updateLanguage.bind(this)\r\n        this.isLoading = this.isLoading.bind(this)\r\n    }\r\n\r\n    // for re-rendering repos of selected language\r\n    componentDidMount(){\r\n        this.updateLanguage(this.state.selectedLanguage)\r\n    }\r\n\r\n    //handler for updating language\r\n    updateLanguage(selectedLanguage){\r\n        this.setState({\r\n            selectedLanguage,\r\n            error: null,\r\n            repos: null //repos & error being null means it's loading\r\n        })\r\n\r\n        fetchPopularRepos(selectedLanguage)\r\n            .then(repos => this.setState({\r\n                repos,\r\n                error: null,\r\n            }))\r\n            .catch(() => {\r\n                console.warn('Error in fetching repos: ', this.state.error)\r\n                this.setState({\r\n                    error: `There was an error fetching the repositories`                    \r\n                })\r\n            })           \r\n            \r\n    }\r\n\r\n    //handler for returning bool if it's loading or not\r\n    isLoading(){\r\n        return this.state.repos === null && this.state.error === null\r\n    }\r\n\r\n    render() {\r\n        const { selectedLanguage, repos, error } = this.state\r\n        return (\r\n            <>\r\n                <LanguageNavBar \r\n                    selected={selectedLanguage}\r\n                    onUpdateLanguage={this.updateLanguage}\r\n                />\r\n\r\n                {this.isLoading() && <Loading />}\r\n\r\n                {error && <p className='center-text error'>{error}</p>}\r\n\r\n                {repos && <ReposGrid repos={repos}/>}\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Popular","import React from 'react'\r\nimport { battle } from '../utils/api'\r\nimport { FaCompass, FaBriefcase, FaUsers, FaUserFriends, FaCode, FaUser } from 'react-icons/fa'\r\nimport Card from './Card'\r\nimport Loading from './Loading'\r\nimport Tooltip from './Tooltip'\r\n\r\nfunction ProfileList (profile){\r\n    return(\r\n      <ul className='card-list'>\r\n              <li>\r\n                <FaUser color='rgb(239, 115, 115)' size={22} />\r\n                {profile.name}\r\n              </li>\r\n              {profile.location && (\r\n                <li>\r\n                  <Tooltip text=\"User's location\">\r\n                  <FaCompass color='rgb(144, 115, 255)' size={22} />\r\n                  {profile.location}\r\n                  </Tooltip>\r\n                </li>\r\n              )}\r\n              {profile.company && (\r\n                <li>\r\n                  <Tooltip text=\"User's company\">\r\n                  <FaBriefcase color='#795548' size={22} />\r\n                  {profile.company}\r\n                  </Tooltip>\r\n                </li>\r\n              )}\r\n              <li>\r\n                <FaUsers color='rgb(129, 195, 245)' size={22} />\r\n                {profile.followers.toLocaleString()} followers\r\n              </li>\r\n              <li>\r\n                <FaUserFriends color='rgb(64, 183, 95)' size={22} />\r\n                {profile.following.toLocaleString()} following\r\n              </li>\r\n            </ul>\r\n    )\r\n}\r\n\r\nexport default class Results extends React.Component {\r\n  constructor(props) {\r\n    super(props)\r\n\r\n    this.state = {\r\n      winner: null,\r\n      loser: null,\r\n      error: null,\r\n      loading: true\r\n    }\r\n  }\r\n  componentDidMount () {\r\n    const { playerOne, playerTwo } = this.props\r\n\r\n    battle([ playerOne, playerTwo ])\r\n      .then((players) => {\r\n        this.setState({\r\n          winner: players[0],\r\n          loser: players[1],\r\n          error: null,\r\n          loading: false\r\n        })\r\n      }).catch(({ message }) => {\r\n        this.setState({\r\n          error: message,\r\n          loading: false\r\n        })\r\n      })\r\n  }\r\n  render() {\r\n    const { winner, loser, error, loading } = this.state\r\n\r\n    if (loading === true) {\r\n      return <Loading />\r\n    }\r\n\r\n    if (error) {\r\n      return (\r\n        <p className='center-text error'>{error}</p>\r\n      )\r\n    }\r\n\r\n    return (\r\n      <>\r\n        <div className='grid space-around container-sm'>\r\n\r\n\r\n            <Card \r\n            header={winner.score === loser.score ? 'Tie' : 'Winner'}\r\n            subheader={winner.score.toLocaleString()}\r\n            name={winner.profile.login}\r\n            href={winner.profile.html_url}\r\n            avatar={winner.profile.avatar_url}\r\n            >\r\n              {ProfileList(winner.profile)}\r\n            </Card> \r\n\r\n\r\n            <Card \r\n              header={winner.score === loser.score ? 'Tie' : 'Loser'}\r\n              subheader={loser.score.toLocaleString()}\r\n              name={loser.profile.login}\r\n              href={loser.profile.html_url}\r\n              avatar={loser.profile.avatar_url}\r\n            >\r\n              {ProfileList(loser.profile)}\r\n            </Card>\r\n\r\n        </div>\r\n        <button className='btn dark-btn btn-space' onClick={this.props.onReset}>\r\n          Reset\r\n        </button>\r\n      </>\r\n    )\r\n  }\r\n}","import React from 'react'\r\nimport { FaUserFriends, FaFighterJet, FaTrophy, FaTimesCircle } from 'react-icons/fa'\r\nimport PropTypes from 'prop-types'\r\nimport Results from './Results'\r\nimport { ThemeConsumer } from '../context/theme'\r\n\r\nfunction Instructions () {\r\n  return (\r\n    <ThemeConsumer>\r\n      {({ theme }) => (\r\n        <div className='instructions-container'>\r\n          <h1 className='center-text header-lg'>\r\n            Instructions\r\n          </h1>\r\n          <ol className='container-sm grid center-text battle-instructions'>\r\n            <li>\r\n              <h3 className='header-sm'>Enter two Github users</h3>\r\n              <FaUserFriends className={`bg-${theme}`} color='rgb(255, 191, 116)' size={140} />\r\n            </li>\r\n            <li>\r\n              <h3 className='header-sm'>Battle</h3>\r\n              <FaFighterJet className={`bg-${theme}`} color='#727272' size={140} />\r\n            </li>\r\n            <li>\r\n              <h3 className='header-sm'>See the winners</h3>\r\n              <FaTrophy className={`bg-${theme}`} color='rgb(255, 215, 0)' size={140} />\r\n            </li>\r\n          </ol>\r\n        </div>\r\n      )}\r\n    </ThemeConsumer>\r\n  )\r\n}\r\n\r\nclass PlayerInput extends React.Component {\r\n  constructor(props) {\r\n    super(props)\r\n\r\n    this.state = {\r\n      username: ''\r\n    }\r\n\r\n    this.handleSubmit = this.handleSubmit.bind(this)\r\n    this.handleChange = this.handleChange.bind(this)\r\n  }\r\n  handleSubmit(event) {\r\n    event.preventDefault()\r\n\r\n    this.props.onSubmit(this.state.username)\r\n  }\r\n  handleChange(event) {\r\n    this.setState({\r\n      username: event.target.value\r\n    })\r\n  }\r\n  render() {\r\n    return (\r\n      <ThemeConsumer>\r\n        {({ theme }) => (\r\n          <form className='column player' onSubmit={this.handleSubmit}>\r\n            <label htmlFor='username' className='player-label'>\r\n              {this.props.label}\r\n            </label>\r\n            <div className='row player-inputs'>\r\n              <input\r\n                type='text'\r\n                id='username'\r\n                className={`input-${theme}`}\r\n                placeholder='github username'\r\n                autoComplete='off'\r\n                value={this.state.username}\r\n                onChange={this.handleChange}\r\n              />\r\n              <button\r\n                className={`btn ${theme === 'dark' ? 'light-btn' : 'dark-btn'}`}\r\n                type='submit'\r\n                disabled={!this.state.username}\r\n              >\r\n                Submit\r\n              </button>\r\n            </div>\r\n          </form>\r\n        )}\r\n      </ThemeConsumer>\r\n    )\r\n  }\r\n}\r\n\r\nPlayerInput.propTypes = {\r\n  onSubmit: PropTypes.func.isRequired,\r\n  label: PropTypes.string.isRequired\r\n}\r\n\r\nfunction PlayerPreview ({ username, onReset, label }) {\r\n  return (\r\n    <ThemeConsumer>\r\n      {({ theme }) => (\r\n        <div className='column player'>\r\n          <h3 className='player-label'>{label}</h3>\r\n          <div className={`row bg-${theme}`}>\r\n            <div className='player-info'>\r\n              <img\r\n                className='avatar-small'\r\n                src={`https://github.com/${username}.png?size=200`}\r\n                alt={`Avatar for ${username}`}\r\n              />\r\n              <a\r\n                href={`https://github.com/${username}`}\r\n                className='link'>\r\n                  {username}\r\n              </a>\r\n            </div>\r\n            <button className='btn-clear flex-center' onClick={onReset}>\r\n              <FaTimesCircle color='rgb(194, 57, 42)' size={26} />\r\n            </button>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </ThemeConsumer>\r\n  )\r\n}\r\n\r\nPlayerPreview.propTypes = {\r\n  username: PropTypes.string.isRequired,\r\n  onReset: PropTypes.func.isRequired,\r\n  label: PropTypes.string.isRequired\r\n}\r\n\r\nexport default class Battle extends React.Component {\r\n  constructor(props) {\r\n    super(props)\r\n\r\n    this.state = {\r\n      playerOne: null,\r\n      playerTwo: null,\r\n      battle: false\r\n    }\r\n\r\n    this.handleSubmit = this.handleSubmit.bind(this)\r\n    this.handleReset = this.handleReset.bind(this)\r\n  }\r\n  handleSubmit(id, player) {\r\n    this.setState({\r\n      [id]: player\r\n    })\r\n  }\r\n  handleReset(id) {\r\n    this.setState({\r\n      [id]: null\r\n    })\r\n  }\r\n  render() {\r\n    const { playerOne, playerTwo, battle } = this.state\r\n\r\n    if (battle === true) {\r\n      return (\r\n        <Results\r\n          playerOne={playerOne}\r\n          playerTwo={playerTwo}\r\n          onReset={() => this.setState({\r\n            playerOne: null,\r\n            playerTwo: null,\r\n            battle: false\r\n          })}\r\n        />\r\n      )\r\n    }\r\n\r\n    return (\r\n      <React.Fragment>\r\n        <Instructions />\r\n\r\n        <div className='players-container'>\r\n          <h1 className='center-text header-lg'>Players</h1>\r\n          <div className='row space-around'>\r\n            {playerOne === null\r\n              ? <PlayerInput\r\n                  label='Player One'\r\n                  onSubmit={(player) => this.handleSubmit('playerOne', player)}\r\n                />\r\n              : <PlayerPreview\r\n                  username={playerOne}\r\n                  label='Player One'\r\n                  onReset={() => this.handleReset('playerOne')}\r\n                />\r\n            }\r\n\r\n            {playerTwo === null\r\n              ? <PlayerInput\r\n                  label='Player Two'\r\n                  onSubmit={(player) => this.handleSubmit('playerTwo', player)}\r\n                />\r\n              : <PlayerPreview\r\n                  username={playerTwo}\r\n                  label='Player Two'\r\n                  onReset={() => this.handleReset('playerTwo')}\r\n                />\r\n            }\r\n          </div>\r\n\r\n\r\n          {playerOne && playerTwo && (\r\n            <button\r\n              className='btn dark-btn btn-space'\r\n              onClick={() => this.setState({battle: true})}\r\n            >\r\n              Battle\r\n            </button>\r\n          )}\r\n        </div>\r\n      </React.Fragment>\r\n    )\r\n  }\r\n}","import React from 'react'\r\nimport { ThemeConsumer } from '../context/theme'\r\nimport {NavLink} from 'react-router-dom'\r\n\r\nexport default function Nav () {\r\n  return (\r\n    <ThemeConsumer>\r\n      {({ theme, toggleTheme }) => (\r\n        <nav className='row space-between'>\r\n          <ul className='row nav'>\r\n            <li>\r\n              <NavLink activeStyle={{color: 'rgb(187,46,31)'}} to='/' exact className='nav-link'>Popular</NavLink>\r\n            </li>\r\n            <li>\r\n              <NavLink activeStyle={{color: 'rgb(187,46,31)'}} to='/battle' className='nav-link'>Battle</NavLink>\r\n            </li>\r\n          </ul>\r\n          <button\r\n            style={{fontSize: 30}}\r\n            className='btn-clear'\r\n            onClick={toggleTheme}\r\n          >\r\n            {theme === 'light' ? '🔦' : '💡'}\r\n          </button>\r\n        </nav>\r\n      )}\r\n    </ThemeConsumer>\r\n  )\r\n}","import React from 'react';\nimport './App.css';\nimport Popular from './components/Popular'\nimport Battle from './components/Battle'\nimport { ThemeProvider } from './context/theme'\nimport Nav from './components/Nav'\nimport {HashRouter as Router, Route} from 'react-router-dom'\n\nexport default class App extends React.Component {\n  constructor(props){\n    super(props)\n    this.state={\n      theme:'light',\n      toggleTheme: () => {\n        this.setState(({ theme }) => ({\n          theme: theme==='light' ? 'dark' : 'light'\n        }))\n      }\n    }\n  }\n  render(){\n    return (\n    <Router  basename={process.env.PUBLIC_URL}>\n      <ThemeProvider value={this.state}>\n        <div className={this.state.theme}>\n          <div className=\"container\">\n            <Nav />\n            <Route exact path='/' component={Popular}/>\n            <Route path='/battle' component={Battle}/>\n          </div>\n        </div>\n      </ThemeProvider>\n    </Router>\n  )}\n}\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}